/*
*/
-- CREATE EXTENSION IF NOT EXISTS "uuid_ossp";  -- If NEEDED
---- Table: STUDENT
CREATE TABLE STUDENT (
	STUDENT_ID UUID PRIMARY KEY DEFAULT UUID_GENERATE_V4(), -- or STUDENT_ID SERIAL PRIMARY KEY,
	FIRST_NAME VARCHAR(255) NOT NULL,
	LAST_NAME VARCHAR(255) NOT NULL,
	EMAIL TEXT CHECK(EMAIL ~* '^[A-Za-z0-9._%-]+@[A-Za-z0-9.-]+[.][A-Za-z]+$'),
	DATE_BIRTH DATE NOT NULL
);

---- Table: SUBJECT
CREATE TABLE SUBJECT (
	SUBJECT_ID UUID PRIMARY KEY DEFAULT UUID_GENERATE_V4(), -- or SUBJECT_ID SERIAL PRIMARY KEY,
	SUBJECT TEXT NOT NULL,
	DESCRIPTION TEXT
);

---- Table: TEACHER
CREATE TABLE TEACHER (
	TEACHER_ID UUID PRIMARY KEY DEFAULT UUID_GENERATE_V4(), -- or TEACHER_ID SERIAL PRIMARY KEY,
	FIRST_NAME VARCHAR(255) NOT NULL,
	LAST_NAME VARCHAR(255) NOT NULL,
	EMAIL TEXT CHECK(EMAIL ~* '^[A-Za-z0-9._%-]+@[A-Za-z0-9.-]+[.][A-Za-z]+$'),
	DATE_BIRTH DATE NOT NULL
);

---- DataType: FEEDBACK 
CREATE DOMAIN RATING SMALLINT CHECK (VALUE > 0 AND VALUE <= 5);
CREATE TYPE FEEDBACK AS (
	STUDENT_ID UUID,
	RATING RATING,
	FEEDBACK TEXT
);

---- Table COURSE:
CREATE TABLE COURSE (
	COURSE_ID UUID PRIMARY KEY DEFAULT UUID_GENERATE_V4(), -- or COURSE_ID SERIAL PRIMARY KEY,
	"name" TEXT NOT NULL,
	DESCRIPTION TEXT,
	SUBJECT_ID UUID REFERENCES SUBJECT(SUBJECT_ID) NOT NULL,
	TEACHER_ID UUID REFERENCES TEACHER(TEACHER_ID) NOT NULL,
	FEEDBACK FEEDBACK[]
);

---- Table ENROLLMENT:
CREATE TABLE ENROLLMENT (
	COURSE_ID UUID REFERENCES COURSE(COURSE_ID),
	STUDENT_ID UUID REFERENCES STUDENT(STUDENT_ID),
	DATE_ENROLLMENT DATE NOT NULL,
	CONSTRAINT PK_ENROLLMENT PRIMARY KEY (COURSE_ID, STUDENT_ID)
);

-- Table: Feedback
CREATE TABLE FEEDBACK (
	STUDENT_ID UUID REFERENCES STUDENT(STUDENT_ID),
	COURSE_ID UUID REFERENCES COURSE(COURSE_ID),
	RATING RATING NOT NULL,
	FEEDBACK text,
	CONSTRAINT PK_FEEDBACK PRIMARY KEY (STUDENT_ID, COURSE_ID)
);

-- Insert data into our tables
INSERT INTO STUDENT (
	FIRST_NAME,
	LAST_NAME,
	EMAIL,
	DATE_BIRTH
) VALUES (
	'MO',
	'DIVI',
	'mo.divi@mail.com',
	'1992-01-02'::DATE
);

INSERT INTO TEACHER (
	FIRST_NAME,
	LAST_NAME,
	EMAIL,
	DATE_BIRTH
) VALUES (
	'Harry',
	'Oays',
	'harry.oays@mail.com',
	'1982-01-02'::DATE
);

INSERT INTO COURSE (
	"name",
	DESCRIPTION,
	SUBJECT_ID,
	TEACHER_ID
) VALUES (
	('Programming BootCamp',
	'Learn everything from front-end to back-end for beginners',
	'add a subject id',
	'add a teacher id'),
	('Programming History',
	'Learn the history of algorithm and programming',
	'add a subject id',
	'add a teacher id')
);